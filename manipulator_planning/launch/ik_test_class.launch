<?xml version="1.0"?>
<launch>

	<!-- Load parameters --> 
	<!-- <rosparam command="load" file="$(find manipulator_planning)/config/manipulator_planning.yaml" /> -->

	<!-- Load robot description --> 
	<include file="$(find manipulator_description)/launch/load.launch" />

	<!-- Publish robot state (joints) as TF -->
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

	<!-- Joint State Publisher -->
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" >
		<rosparam param="source_list">["manipulator_planning/joint_states"]</rosparam>
	</node>

	<!-- <node name="joint_state_publisher_gui" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" /> -->

	<!-- rosparam -->
	<rosparam file="$(find manipulator_planning)/config/manipulator_planning.yaml" command="load"/>

	<!-- Node for testing inverse kinematics using the ManipulatorIK Class-->
	<node name="ik_tests_class" pkg="manipulator_planning" type="ik_tests_class" output="screen"/>

	<!-- RViz -->
	<node name="rviz"  pkg="rviz" type="rviz" args="-d $(find manipulator_planning)/rviz/config.rviz" required="true" />

	<!-- incluir nÃ³ manipulator vision e testar cinematica inversa -->
	<!-- Node for generating end-effector positions -->
	<include file="$(find manipulator_vision)/launch/manipulator_vision.launch" />

</launch>
